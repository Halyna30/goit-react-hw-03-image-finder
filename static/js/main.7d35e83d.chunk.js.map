{"version":3,"sources":["Components/ImageGalleryItem/ImageGalleryItem.module.css","Components/Modal/Modal.module.css","Components/ImageGallery/ImageGallery.module.css","Components/Button/Button.module.css","services/restApi.js","Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","App.js","index.js","Components/Searchbar/Searchbar.module.css"],"names":["module","exports","fetch","searchQuery","currentPage","pageSize","axios","get","then","response","data","hits","Searchbar","state","query","inputChange","e","value","currentTarget","setState","handlerSubmit","event","preventDefault","props","onSubmit","reset","className","s","SearchForm","this","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","largeImageURL","imageGalleryItem","src","alt","data-largeimage","imageGalleryItemImg","ImageGallery","images","onClick","imageGallery","map","id","Button","onclick","btnLoadMore","modalRoot","document","querySelector","Modal","handleKeyDown","code","onClose","handleOverlayClick","target","window","addEventListener","body","classList","add","removeEventListener","remove","children","createPortal","overlay","modal","App","isLoading","error","currentImage","description","showModal","onChangeQuery","fetchImages","options","prevState","catch","finally","handleImageClick","nodeName","dataset","largeimage","toggleModal","prevProps","scrollTo","top","documentElement","scrollHeight","behavior","showBtn","length","color","height","width","timeout","ReactDOM","render","StrictMode","getElementById"],"mappings":"wIACAA,EAAOC,QAAU,CAAC,iBAAmB,2CAA2C,oBAAsB,gD,mBCAtGD,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,uB,mBCA3DD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,YAAc,8B,6JCWjBC,EARD,SAAC,GAA0D,IAAD,IAAvDC,mBAAuD,MAAzC,GAAyC,MAArCC,mBAAqC,MAAvB,EAAuB,MAApBC,gBAAoB,MAAT,GAAS,EACtE,OAAOC,IACJC,IADI,qCAE2BJ,EAF3B,iBAE+CC,EAF/C,gBAHG,qCAGH,6DAE0HC,IAE9HG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,S,wCC4CrBC,E,4MAhDbC,MAAQ,CACNC,MAAO,I,EAGTC,YAAc,SAAAC,GACZ,IAAMC,EAAQD,EAAEE,cAAcD,MAE9B,EAAKE,SAAS,CAAEL,MAAOG,K,EAGzBG,cAAgB,SAAAC,GACdA,EAAMC,iBAEN,EAAKC,MAAMC,SAAS,EAAKX,MAAMC,OAC/B,EAAKW,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CACZL,MAAO,M,4CAIX,WACE,OACE,wBAAQY,UAAWC,IAAEf,UAArB,SACE,uBAAMc,UAAWC,IAAEC,WAAYJ,SAAUK,KAAKT,cAA9C,UACE,wBAAQU,KAAK,SAASJ,UAAWC,IAAEI,iBAAnC,SACE,sBAAML,UAAWC,IAAEK,sBAAnB,sBAGF,uBACEN,UAAWC,IAAEM,gBACbH,KAAK,OACLI,YAAY,2BACZC,SAAUN,KAAKd,YACfE,MAAOY,KAAKhB,MAAMC,iB,GArCNsB,a,iBCiBTC,EAjBU,SAAC,GAAD,IAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,cAAvB,OACvB,oBAAId,UAAWC,IAAEc,iBAAjB,SACE,qBACEC,IAAKJ,EACLK,IAAKJ,EACLK,kBAAiBJ,EACjBd,UAAWC,IAAEkB,yB,iBCYJC,EAlBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAX,OACnB,oBAAItB,UAAWC,IAAEsB,aAAcD,QAASA,EAAxC,SACGD,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIb,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,cAA3B,OACV,cAAC,EAAD,CAEEF,aAAcA,EACdC,KAAMA,EACNC,cAAeA,GAHVW,S,iBCKEC,EAVA,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACb,wBAAQvB,KAAK,SAASkB,QAASK,EAAS3B,UAAWC,IAAE2B,YAArD,wB,iBCCIC,EAAYC,SAASC,cAAc,eAyC1BC,E,4MA5BbC,cAAgB,SAAA3C,GACC,WAAXA,EAAE4C,MACJ,EAAKrC,MAAMsC,W,EAIfC,mBAAqB,SAAA9C,GACfA,EAAEE,gBAAkBF,EAAE+C,QACxB,EAAKxC,MAAMsC,W,uDAlBf,WACEG,OAAOC,iBAAiB,UAAWpC,KAAK8B,eACxCH,SAASU,KAAKC,UAAUC,IAAI,gB,kCAG9B,WACEJ,OAAOK,oBAAoB,UAAWxC,KAAK8B,eAC3CH,SAASU,KAAKC,UAAUG,OAAO,gB,oBAejC,WAAU,IACAC,EAAa1C,KAAKN,MAAlBgD,SACR,OAAOC,uBACL,qBAAK9C,UAAWC,IAAE8C,QAASzB,QAASnB,KAAKiC,mBAAzC,SACE,qBAAKpC,UAAWC,IAAE+C,MAAlB,SAA0BH,MAE5BhB,O,GA7BcnB,aC8FLuC,E,4MA3Fb9D,MAAQ,CACNV,YAAa,GACbC,YAAa,EACb2C,OAAQ,GACR6B,WAAW,EACXC,MAAO,KACPC,aAAc,CAAEtC,cAAe,GAAIuC,YAAa,IAChDC,WAAW,G,EAcbC,cAAgB,SAAAnE,GACd,EAAKK,SAAS,CAAEhB,YAAaW,EAAOV,YAAa,EAAG2C,OAAQ,M,EAG9DmC,YAAc,WAAO,IAAD,EACmB,EAAKrE,MAAlCT,EADU,EACVA,YACF+E,EAAU,CAAEhF,YAFA,EACGA,YACUC,eAI/B,OAFA,EAAKe,SAAS,CAAEyD,WAAW,IAEpB1E,EAAMiF,GACV3E,MAAK,SAAAuC,GACJ,EAAK5B,UAAS,SAAAiE,GAAS,MAAK,CAC1BrC,OAAO,GAAD,mBAAMqC,EAAUrC,QAAhB,YAA2BA,IACjC3C,YAAagF,EAAUhF,YAAc,SAGxCiF,OAAM,SAAAR,GAAK,OAAI,EAAK1D,SAAS,CAAE0D,aAC/BS,SAAQ,kBAAM,EAAKnE,SAAS,CAAEyD,WAAW,Q,EAG9CW,iBAAmB,SAAAlE,GACjB,GAA8B,QAA1BA,EAAM0C,OAAOyB,SAAoB,CACnC,IAAMhD,EAAgBnB,EAAM0C,OAAO0B,QAAQC,WACrCX,EAAc1D,EAAM0C,OAAOpB,IAEjC,EAAKxB,SAAS,CAAE2D,aAAc,CAAEtC,gBAAeuC,iBAC/C,EAAKY,gB,EAITA,YAAc,WACZ,EAAKxE,UAAS,kBAAoB,CAAE6D,WAAtB,EAAGA,e,wDA3CnB,SAAmBY,EAAWR,GACxBA,EAAUjF,cAAgB0B,KAAKhB,MAAMV,aACvC0B,KAAKqD,cAGPlB,OAAO6B,SAAS,CACdC,IAAKtC,SAASuC,gBAAgBC,aAC9BC,SAAU,a,oBAuCd,WAAU,IAAD,EACuBpE,KAAKhB,MAA3BkC,EADD,EACCA,OAAQ6B,EADT,EACSA,UACVsB,EAAUnD,EAAOoD,OAAS,IAAMvB,EAF/B,EAGgC/C,KAAKhB,MAAMiE,aAA1CtC,EAHD,EAGCA,cAAeuC,EAHhB,EAGgBA,YAEvB,OACE,qCACE,cAAC,EAAD,CAAWvD,SAAUK,KAAKoD,gBAC1B,qBAAKvD,UAAU,SAAf,SACGkD,GACC,cAAC,IAAD,CACE9C,KAAK,OACLsE,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,QAKf,cAAC,EAAD,CACExD,OAAQlB,KAAKhB,MAAMkC,OACnBC,QAASnB,KAAK0D,mBAEfW,GAAW,cAAC,EAAD,CAAQ7C,QAASxB,KAAKqD,cACjCrD,KAAKhB,MAAMmE,WACV,cAAC,EAAD,CAAOnB,QAAShC,KAAK8D,YAArB,SACE,qBAAKjE,UAAU,aAAagB,IAAKF,EAAeG,IAAKoC,a,GApF/C3C,aCJlBoE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlD,SAASmD,eAAe,U,kBCR1B3G,EAAOC,QAAU,CAAC,UAAY,6BAA6B,WAAa,8BAA8B,iBAAmB,oCAAoC,sBAAwB,yCAAyC,gBAAkB,sC","file":"static/js/main.7d35e83d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__1pnHf\",\"imageGalleryItemImg\":\"ImageGalleryItem_imageGalleryItemImg__32BSm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__30U5b\",\"modal\":\"Modal_modal__11vYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__2WWAD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnLoadMore\":\"Button_btnLoadMore__3E0Bf\"};","import axios from 'axios';\n\nconst key = '19813258-07ae0ca846b71b474a409e06e';\n\nconst fetch = ({ searchQuery = '', currentPage = 1, pageSize = 12 }) => {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${key}&image_type=photo&orientation=horizontal&per_page=${pageSize}`,\n    )\n    .then(response => response.data.hits);\n};\n\nexport default fetch;\n","import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport s from './Searchbar.module.css';\n\nclass Searchbar extends Component {\n  state = {\n    query: '',\n  };\n\n  inputChange = e => {\n    const value = e.currentTarget.value;\n\n    this.setState({ query: value });\n  };\n\n  handlerSubmit = event => {\n    event.preventDefault();\n\n    this.props.onSubmit(this.state.query);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      query: '',\n    });\n  };\n\n  render() {\n    return (\n      <header className={s.Searchbar}>\n        <form className={s.SearchForm} onSubmit={this.handlerSubmit}>\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            placeholder=\"Search images and photos\"\n            onChange={this.inputChange}\n            value={this.state.query}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ webformatURL, tags, largeImageURL }) => (\n  <li className={s.imageGalleryItem}>\n    <img\n      src={webformatURL}\n      alt={tags}\n      data-largeimage={largeImageURL}\n      className={s.imageGalleryItemImg}\n    />\n  </li>\n);\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\nimport s from './ImageGallery.module.css';\n\nconst ImageGallery = ({ images, onClick }) => (\n  <ul className={s.imageGallery} onClick={onClick}>\n    {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n      <ImageGalleryItem\n        key={id}\n        webformatURL={webformatURL}\n        tags={tags}\n        largeImageURL={largeImageURL}\n      />\n    ))}\n  </ul>\n);\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nconst Button = ({ onclick }) => (\n  <button type=\"button\" onClick={onclick} className={s.btnLoadMore}>\n    Load more\n  </button>\n);\n\nButton.propTypes = {\n  onclick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n    document.body.classList.add('Modal-open');\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n    document.body.classList.remove('Modal-open');\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleOverlayClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { children } = this.props;\n    return createPortal(\n      <div className={s.overlay} onClick={this.handleOverlayClick}>\n        <div className={s.modal}>{children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Modal;\n","import { Component } from 'react';\nimport fetch from './services/restApi';\nimport Loader from 'react-loader-spinner';\n\nimport Searchbar from './Components/Searchbar';\nimport ImageGallery from './Components/ImageGallery';\nimport Button from './Components/Button';\nimport Modal from './Components/Modal';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    currentPage: 1,\n    images: [],\n    isLoading: false,\n    error: null,\n    currentImage: { largeImageURL: '', description: '' },\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.searchQuery !== this.state.searchQuery) {\n      this.fetchImages();\n    }\n\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  onChangeQuery = query => {\n    this.setState({ searchQuery: query, currentPage: 1, images: [] });\n  };\n\n  fetchImages = () => {\n    const { currentPage, searchQuery } = this.state;\n    const options = { searchQuery, currentPage };\n\n    this.setState({ isLoading: true });\n\n    return fetch(options)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          currentPage: prevState.currentPage + 1,\n        }));\n      })\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ isLoading: false }));\n  };\n\n  handleImageClick = event => {\n    if (event.target.nodeName === 'IMG') {\n      const largeImageURL = event.target.dataset.largeimage;\n      const description = event.target.alt;\n\n      this.setState({ currentImage: { largeImageURL, description } });\n      this.toggleModal();\n    }\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  render() {\n    const { images, isLoading } = this.state;\n    const showBtn = images.length > 0 && !isLoading;\n    const { largeImageURL, description } = this.state.currentImage;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.onChangeQuery} />\n        <div className=\"loader\">\n          {isLoading && (\n            <Loader\n              type=\"Puff\"\n              color=\"#00BFFF\"\n              height={100}\n              width={100}\n              timeout={3000} //3 secs\n            />\n          )}\n        </div>\n\n        <ImageGallery\n          images={this.state.images}\n          onClick={this.handleImageClick}\n        />\n        {showBtn && <Button onclick={this.fetchImages} />}\n        {this.state.showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img className=\"largeImage\" src={largeImageURL} alt={description} />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1BCTe\",\"SearchForm\":\"Searchbar_SearchForm__3eGNp\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3VJY5\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1SwTh\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2-hU1\"};"],"sourceRoot":""}